name: Frontend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'apps/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'apps/**'

env:
  FLUTTER_VERSION: '3.16.0'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        app: [studio, console, player]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true

    - name: Get dependencies
      run: flutter pub get
      working-directory: apps/${{ matrix.app }}

    - name: Analyze code
      run: flutter analyze --fatal-infos
      working-directory: apps/${{ matrix.app }}

    - name: Run tests
      run: flutter test --coverage
      working-directory: apps/${{ matrix.app }}

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: apps/${{ matrix.app }}/coverage/lcov.info
        flags: ${{ matrix.app }}

  build-web:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    strategy:
      matrix:
        app: [studio, console, player]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true

    - name: Get dependencies
      run: flutter pub get
      working-directory: apps/${{ matrix.app }}

    - name: Build web app
      run: flutter build web --release
      working-directory: apps/${{ matrix.app }}

    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v2
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: ${{ secrets.AWS_REGION }}

    # - name: Deploy to S3
    #   run: |
    #     if [ "${{ matrix.app }}" == "studio" ]; then
    #       BUCKET="studio.teneocast.com"
    #     elif [ "${{ matrix.app }}" == "console" ]; then
    #       BUCKET="console.teneocast.com"
    #     elif [ "${{ matrix.app }}" == "player" ]; then
    #       BUCKET="player.teneocast.com"
    #     fi
        
    #     aws s3 sync apps/${{ matrix.app }}/build/web/ s3://$BUCKET --delete
    #     aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"

  build-windows:
    needs: test
    runs-on: windows-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true

    - name: Enable Windows platform
      run: flutter config --enable-windows-desktop

    - name: Get dependencies
      run: flutter pub get
      working-directory: apps/player

    - name: Build Windows app
      run: flutter build windows --release
      working-directory: apps/player

    - name: Package Windows app (Skip MSIX for CI/CD)
      run: |
        # Skip MSIX packaging for CI/CD to avoid certificate prompts
        # MSIX requires code signing certificates which are not available in CI/CD
        # The Windows executable (.exe) is already built and available for distribution
        echo "Skipping MSIX packaging in CI/CD environment - using executable instead"
      working-directory: apps/player

    - name: Upload Windows package
      uses: actions/upload-artifact@v4
      with:
        name: teneocast-player-windows
        path: apps/player/build/windows/x64/runner/Release/

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: apps/player/build/windows/x64/runner/Release/*.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-android:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        cache: true

    - name: Get dependencies
      run: flutter pub get
      working-directory: apps/player

    - name: Build Android APK
      run: flutter build apk --release
      working-directory: apps/player

    - name: Build Android App Bundle
      run: flutter build appbundle --release
      working-directory: apps/player

    - name: Upload Android artifacts
      uses: actions/upload-artifact@v4
      with:
        name: teneocast-player-android
        path: |
          apps/player/build/app/outputs/flutter-apk/app-release.apk
          apps/player/build/app/outputs/bundle/release/app-release.aab

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          apps/player/build/app/outputs/flutter-apk/app-release.apk
          apps/player/build/app/outputs/bundle/release/app-release.aab
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
